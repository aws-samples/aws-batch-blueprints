# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

AWSTemplateFormatVersion: '2010-09-09'
Description: >
 Setup a Job Queue and an EC2 Compute Environment on
 AWS Batch. The CE will be based on Launch Template.
 Author: maxhaws@

Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: List<String>
    Default: "g4dn, g5"
  Minvcpus:
    Type: Number
    Default: 0
    Description: Minimum number of vCPUs per Compute Environment
  Maxvcpus:
    Type: Number
    Default: 256
    Description: Maximum number of vCPUs per Compute Environment
  EBSBootSize:
    Type: Number
    Default: 30
    Description: Size in GiB of EBS root volume
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnet Id
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group Id

############################
## AWS Batch Infrastructure
Resources:
  BatchCloudWatchAgentConfig:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: 'text'
      Description: 'Amazon CloudWatch Agent Configuration file'
      Tier: 'Standard'
      Type: 'String'
      Value: '
        {
            "agent": {
                "metrics_collection_interval": 60,
                "run_as_user": "root"
            },
            "metrics": {
                "namespace" : "CWAgent",
                "append_dimensions": {
                    "AutoScalingGroupName": "${aws:AutoScalingGroupName}",
                    "ImageId": "${aws:ImageId}",
                    "InstanceId": "${aws:InstanceId}",
                    "InstanceType": "${aws:InstanceType}"
                },
                "aggregation_dimensions": [["InstanceId"]],
                "metrics_collected": {
                    "nvidia_gpu": {
                        "measurement": [
                          "utilization_gpu",
                          "utilization_memory",
                          "memory_total",
                          "memory_used",
                          "memory_free",
                          "temperature_gpu",
                          "power_draw",
                          "fan_speed",
                          "pcie_link_gen_current",
                          "pcie_link_width_current",
                          "encoder_stats_session_count",
                          "encoder_stats_average_fps",
                          "encoder_stats_average_latency",
                          "clocks_current_graphics",
                          "clocks_current_sm",
                          "clocks_current_memory",
                          "clocks_current_video"
                        ],
                        "metrics_collection_interval": 60,
                        "resources": [
                            "*"
                        ]
                    }
                }
            }
        }'

  BatchLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateData:
          BlockDeviceMappings:
          - DeviceName: '/dev/xvda'
            Ebs:
              DeleteOnTermination: true
              Encrypted: false
              Iops: 3000
              VolumeSize: !Ref EBSBootSize
              VolumeType: 'gp3'
          Monitoring:
            Enabled: true
          UserData:
            Fn::Base64: !Sub
              - |
                MIME-Version: 1.0
                Content-Type: multipart/mixed; boundary="==MYBOUNDARY=="

                --==MYBOUNDARY==
                Content-Type: text/cloud-config; charset="us-ascii"

                runcmd:
                - yum install -y amazon-cloudwatch-agent
                - /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c ssm:${CLOUDWATCH_CONFIG_PARAMETER}

                --==MYBOUNDARY==--
              - {
                  CLOUDWATCH_CONFIG_PARAMETER: !Ref BatchCloudWatchAgentConfig
                }

  BatchInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy

  BatchInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref BatchInstanceRole

  BatchECSCE:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ComputeResources:
        AllocationStrategy: 'BEST_FIT_PROGRESSIVE'
        LaunchTemplate:
            LaunchTemplateId: !Ref BatchLaunchTemplate
            Version: !GetAtt BatchLaunchTemplate.LatestVersionNumber
        MinvCpus: !Ref Minvcpus
        MaxvCpus: !Ref Maxvcpus
        SecurityGroupIds:
          - !Ref SecurityGroupId
        Subnets: !Ref SubnetIds
        Type: EC2
        InstanceRole: !Ref BatchInstanceProfile
        InstanceTypes: !Ref InstanceType
      ReplaceComputeEnvironment: false
      State: ENABLED


  BatchJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName: !Sub 'jq-detailed-monitoring-${AWS::StackName}'
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref BatchECSCE
          Order: 1
      Priority: 1
      State: "ENABLED"


#############
## Outputs ##
#############
Outputs:
  ComputeEnvironment:
    Value: !Ref BatchECSCE
  JobQueue:
    Value: !Ref BatchJobQueue
