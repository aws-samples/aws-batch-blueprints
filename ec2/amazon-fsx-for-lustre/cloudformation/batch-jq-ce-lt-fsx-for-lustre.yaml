# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

AWSTemplateFormatVersion: '2010-09-09'
Description: >
 Setup a Job Queue and an EC2 Compute Environment on
 AWS Batch. The CE will be based on Launch Template to
 mount Amazon FSx for Lustre.
 Author: Maxime Hugues maxhaws@

Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: List<String>
    Default: "c5, m5, r5"
  Minvcpus:
    Type: Number
    Default: 0
    Description: Minimum number of vCPUs per Compute Environment
  Maxvcpus:
    Type: Number
    Default: 256
    Description: Maximum number of vCPUs per Compute Environment
  EBSBootSize:
    Type: Number
    Default: 30
    Description: Size in GiB of EBS root volume
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnet Id
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group Id
  FSxLustreDNSName:
    Type: String
    Description: Amazon FSx for Lustre DNS Name
  FSxLustreMountName:
    Type: String
    Description: Amazon FSx for Lustre Mount Name
  FSxLustreMountPoint:
    Type: String
    Default: "/fsxl"
    Description: Amazon FSx for Lustre Mount Point on EC2

############################
## AWS Batch Infrastructure
Resources:
  BatchLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateData:
          BlockDeviceMappings:
          - DeviceName: '/dev/xvda'
            Ebs:
              DeleteOnTermination: true
              Encrypted: false
              Iops: 3000
              VolumeSize: !Ref EBSBootSize
              VolumeType: 'gp3'
          Monitoring:
            Enabled: true
          UserData:
            Fn::Base64: !Sub
              - |
                MIME-Version: 1.0
                Content-Type: multipart/mixed; boundary="==MYBOUNDARY=="

                --==MYBOUNDARY==
                Content-Type: text/cloud-config; charset="us-ascii"

                runcmd:
                - amazon-linux-extras install -y lustre
                - fsx_dns_name=${FSX_LUSTRE_DNS_NAME}
                - fsx_mount_name=${FSX_LUSTRE_MOUNT_NAME}
                - fsx_mount_point=${FSX_LUSTRE_MOUNT_POINT}
                - mkdir -p $fsx_mount_point
                - mount -t lustre -o noatime,flock $fsx_dns_name@tcp:/$fsx_mount_name $fsx_mount_point

                --==MYBOUNDARY==--

                --==MYBOUNDARY==
                Content-Type: text/x-shellscript; charset="us-ascii"

                #!/bin/bash

                cat > /etc/init.d/unmount_fsx.sh << EOF
                #!/bin/bash

                #list lustre file system
                LUSTRE_FS=\$(findmnt -t lustre | awk 'NR>1 {print \$1}')

                # kill any processes accessing the lustre directories
                for i in $LUSTRE_FS
                do
                  lsof \$i | awk 'NR>1 {print \$2}' | xargs kill -9
                done

                #unmount all lustre file system

                umount -a -t lustre
                EOF

                cat > /etc/systemd/system/unmount_fsx.service << EOF
                [Unit]
                Description=Unmount all FSx for Lustre file systems
                DefaultDependencies=no
                Before=poweroff.target halt.target shutdown.target reboot.target

                [Service]
                Type=oneshot
                ExecStart=/etc/init.d/unmount_fsx.sh
                RemainAfterExit=yes

                [Install]
                WantedBy=shutdown.target reboot.target
                EOF

                systemctl daemon-reload
                systemctl enable unmount_fsx.service
                systemctl start unmount_fsx.service

                --==MYBOUNDARY==--
              - {
                  FSX_LUSTRE_DNS_NAME: !Ref FSxLustreDNSName,
                  FSX_LUSTRE_MOUNT_NAME: !Ref FSxLustreMountName,
                  FSX_LUSTRE_MOUNT_POINT: !Ref FSxLustreMountPoint
                }

  BatchInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  BatchInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref BatchInstanceRole

  BatchECSCE:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ComputeResources:
        AllocationStrategy: 'BEST_FIT_PROGRESSIVE'
        LaunchTemplate:
            LaunchTemplateId: !Ref BatchLaunchTemplate
            Version: !GetAtt BatchLaunchTemplate.LatestVersionNumber
        MinvCpus: !Ref Minvcpus
        MaxvCpus: !Ref Maxvcpus
        SecurityGroupIds:
          - !Ref SecurityGroupId
        Subnets: !Ref SubnetIds
        Type: EC2
        InstanceRole: !Ref BatchInstanceProfile
        InstanceTypes: !Ref InstanceType
      ReplaceComputeEnvironment: false
      State: ENABLED


  BatchJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName: !Sub 'jq-fsxl-${AWS::StackName}'
      ComputeEnvironmentOrder:
        - ComputeEnvironment: !Ref BatchECSCE
          Order: 1
      Priority: 1
      State: "ENABLED"


#############
## Outputs ##
#############
Outputs:
  ComputeEnvironment:
    Value: !Ref BatchECSCE
  JobQueue:
    Value: !Ref BatchJobQueue
